services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  docjarvis:
    build:
      context: /Users/joschka/Library/CloudStorage/OneDrive-Personal/Code/projects/chatgpt-retrieval-plugin/
    ports:
      - "4321:4321"
    restart: unless-stopped
    volumes:
      - /Users/joschka/Code/projects/paperflow-ai/export:/documents
    env_file: /Users/joschka/Library/CloudStorage/OneDrive-Personal/Code/projects/chatgpt-retrieval-plugin/.env
    depends_on:
      - docjarvis_redis

  docjarvis_redis:
    image: redis/redis-stack-server:latest
    volumes:
        - redis_data:/data
    command: redis-stack-server --port 6378 --protected-mode no
    ports:
      - "6378:6378"
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6378", "ping"]
      interval: 2s
      timeout: 1m30s
      retries: 5
      start_period: 5s

  # Frontend development service with hot reloading
  frontend:
    image: docker.io/node:20-bookworm-slim
    volumes:
      - ./src-ui:/src/src-ui
    working_dir: /src/src-ui
    ports:
      - "4200:4200"
    command: bash -c "npm update -g pnpm && npm install -g corepack@latest && corepack enable && pnpm install && ./node_modules/.bin/ng serve --host 0.0.0.0 --disable-host-check"
    restart: unless-stopped

  db:
    image: docker.io/library/postgres:13
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless

  webserver:
    build:
      context: .
    restart: unless-stopped
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
      - docjarvis
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
      - ./src:/usr/src/paperless/src
      - ./src-ui:/usr/src/paperless/src-ui
    env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998

  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.8
    restart: unless-stopped

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped

volumes:
  data:
  media:
  pgdata:
  redisdata:
  redis_data:
