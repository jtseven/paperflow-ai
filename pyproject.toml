[project]
name = "paperlessngx"
version = "0.1.0"
description = "A document management system that transforms your physical documents into a searchable online archive"
requires-python = ">=3.10.15"
dependencies = [
    "dateparser ~= 1.2",
    "django ~= 5.1.5",
    "django-allauth[mfa,socialaccount]",
    "django-auditlog",
    "django-celery-results",
    "django-compression-middleware",
    "django-cors-headers",
    "django-extensions",
    "django-filter ~= 24.3",
    "django-guardian",
    "django-multiselectfield",
    "django-soft-delete",
    "djangorestframework ~= 3.15.2",
    "djangorestframework-guardian",
    "drf-writable-nested",
    "bleach",
    "celery[redis]",
    "channels ~= 4.2",
    "channels-redis",
    "concurrent-log-handler",
    "filelock",
    "flower",
    "gotenberg-client",
    "gunicorn",
    "httpx-oauth",
    "imap-tools",
    "inotifyrecursive ~= 0.3",
    "jinja2 ~= 3.1",
    "langdetect",
    "mistralai",
    "mysqlclient",
    "nltk",
    "ocrmypdf ~= 16.8",
    "pathvalidate",
    "pdf2image",
    "psycopg[c]",
    "python-dateutil",
    "python-dotenv",
    "python-gnupg",
    "python-ipware",
    "python-magic",
    "pyzbar",
    "rapidfuzz",
    "redis[hiredis]",
    "scikit-learn ~= 1.6",
    "setproctitle",
    "tika-client",
    "tqdm",
    "uvicorn[standard] == 0.25.0",
    "watchdog ~= 6.0",
    "whitenoise ~= 6.8",
    "whoosh ~= 2.7",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "ruff",
    "factory-boy",
    "pytest",
    "pytest-cov",
    "pytest-django",
    "pytest-httpx",
    "pytest-env",
    "pytest-sugar",
    "pytest-xdist",
    "pytest-mock",
    "pytest-rerunfailures",
    "imagehash",
    "daphne",
    "mkdocs-material",
    "mkdocs-glightbox",
]

typing = [
    "mypy",
    "types-Pillow",
    "django-filter-stubs",
    "types-python-dateutil",
    "djangorestframework-stubs[compatible-mypy]",
    "celery-types",
    "django-stubs[compatible-mypy]",
    "types-dateparser",
    "types-bleach",
    "types-redis",
    "types-tqdm",
    "types-Markdown",
    "types-Pygments",
    "types-colorama",
    "types-setuptools",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/manage.py"]
